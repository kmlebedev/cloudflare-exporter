// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package analytics

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// FetchZoneTotalsResponse is returned by FetchZoneTotals on success.
type FetchZoneTotalsResponse struct {
	Viewer FetchZoneTotalsViewer `json:"viewer"`
}

// GetViewer returns FetchZoneTotalsResponse.Viewer, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsResponse) GetViewer() FetchZoneTotalsViewer { return v.Viewer }

// FetchZoneTotalsViewer includes the requested fields of the GraphQL type viewer.
type FetchZoneTotalsViewer struct {
	Zones []FetchZoneTotalsViewerZonesZone `json:"zones"`
}

// GetZones returns FetchZoneTotalsViewer.Zones, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewer) GetZones() []FetchZoneTotalsViewerZonesZone { return v.Zones }

// FetchZoneTotalsViewerZonesZone includes the requested fields of the GraphQL type zone.
type FetchZoneTotalsViewerZonesZone struct {
	ZoneTag string `json:"zoneTag"`
	// Aggregated HTTP requests data with adaptive sampling
	HttpRequestsAdaptiveGroups []FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups `json:"httpRequestsAdaptiveGroups"`
	// Aggregated Load Balancing origin requests with adaptive sampling
	LoadBalancingRequestsAdaptiveGroups []FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups `json:"loadBalancingRequestsAdaptiveGroups"`
}

// GetZoneTag returns FetchZoneTotalsViewerZonesZone.ZoneTag, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZone) GetZoneTag() string { return v.ZoneTag }

// GetHttpRequestsAdaptiveGroups returns FetchZoneTotalsViewerZonesZone.HttpRequestsAdaptiveGroups, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZone) GetHttpRequestsAdaptiveGroups() []FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups {
	return v.HttpRequestsAdaptiveGroups
}

// GetLoadBalancingRequestsAdaptiveGroups returns FetchZoneTotalsViewerZonesZone.LoadBalancingRequestsAdaptiveGroups, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZone) GetLoadBalancingRequestsAdaptiveGroups() []FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups {
	return v.LoadBalancingRequestsAdaptiveGroups
}

// FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups includes the requested fields of the GraphQL type ZoneHttpRequestsAdaptiveGroups.
// The GraphQL type's documentation follows.
//
// Aggregated HTTP requests data with adaptive sampling
type FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups struct {
	// The number of values for a metric per dimension
	Count uint64 `json:"count"`
	// List of dimensions to group by
	Dimensions FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions `json:"dimensions"`
}

// GetCount returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups.Count, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups) GetCount() uint64 { return v.Count }

// GetDimensions returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups.Dimensions, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroups) GetDimensions() FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions {
	return v.Dimensions
}

// FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions includes the requested fields of the GraphQL type ZoneHttpRequestsAdaptiveGroupsDimensions.
type FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions struct {
	CacheStatus        string `json:"cacheStatus"`
	EdgeResponseStatus uint16 `json:"edgeResponseStatus"`
	// Country from which request originated
	ClientCountryName string `json:"clientCountryName"`
	// Host requested by the client
	ClientRequestHTTPHost string `json:"clientRequestHTTPHost"`
}

// GetCacheStatus returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions.CacheStatus, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions) GetCacheStatus() string {
	return v.CacheStatus
}

// GetEdgeResponseStatus returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions.EdgeResponseStatus, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions) GetEdgeResponseStatus() uint16 {
	return v.EdgeResponseStatus
}

// GetClientCountryName returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions.ClientCountryName, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions) GetClientCountryName() string {
	return v.ClientCountryName
}

// GetClientRequestHTTPHost returns FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions.ClientRequestHTTPHost, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneHttpRequestsAdaptiveGroupsDimensions) GetClientRequestHTTPHost() string {
	return v.ClientRequestHTTPHost
}

// FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups includes the requested fields of the GraphQL type ZoneLoadBalancingRequestsAdaptiveGroups.
// The GraphQL type's documentation follows.
//
// Aggregated Load Balancing origin requests with adaptive sampling
type FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups struct {
	// The number of values for a metric per dimension
	Count uint64 `json:"count"`
	// List of dimensions to group by
	Dimensions FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions `json:"dimensions"`
}

// GetCount returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups.Count, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups) GetCount() uint64 {
	return v.Count
}

// GetDimensions returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups.Dimensions, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroups) GetDimensions() FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions {
	return v.Dimensions
}

// FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions includes the requested fields of the GraphQL type ZoneLoadBalancingRequestsAdaptiveGroupsDimensions.
type FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions struct {
	// Load balancing region where request originated
	Region string `json:"region"`
	// Load balancer name
	LbName string `json:"lbName"`
	// Name for the selected pool
	SelectedPoolName string `json:"selectedPoolName"`
	// Whether traffic is proxied through the Cloudflare network (orange-clouded)
	Proxied uint8 `json:"proxied"`
	// Name of the selected origin
	SelectedOriginName string `json:"selectedOriginName"`
	// Dynamic Latency: RTT (milliseconds) to reach the origin pool
	SelectedPoolAvgRttMs uint64 `json:"selectedPoolAvgRttMs"`
	// Health status for the selected pool
	SelectedPoolHealthy uint8 `json:"selectedPoolHealthy"`
	// Policy by which the load balancer will route traffic
	SteeringPolicy string `json:"steeringPolicy"`
}

// GetRegion returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.Region, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetRegion() string {
	return v.Region
}

// GetLbName returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.LbName, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetLbName() string {
	return v.LbName
}

// GetSelectedPoolName returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.SelectedPoolName, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetSelectedPoolName() string {
	return v.SelectedPoolName
}

// GetProxied returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.Proxied, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetProxied() uint8 {
	return v.Proxied
}

// GetSelectedOriginName returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.SelectedOriginName, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetSelectedOriginName() string {
	return v.SelectedOriginName
}

// GetSelectedPoolAvgRttMs returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.SelectedPoolAvgRttMs, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetSelectedPoolAvgRttMs() uint64 {
	return v.SelectedPoolAvgRttMs
}

// GetSelectedPoolHealthy returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.SelectedPoolHealthy, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetSelectedPoolHealthy() uint8 {
	return v.SelectedPoolHealthy
}

// GetSteeringPolicy returns FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions.SteeringPolicy, and is useful for accessing the field via an interface.
func (v *FetchZoneTotalsViewerZonesZoneLoadBalancingRequestsAdaptiveGroupsDimensions) GetSteeringPolicy() string {
	return v.SteeringPolicy
}

// __FetchZoneTotalsInput is used internally by genqlient
type __FetchZoneTotalsInput struct {
	ZoneIDs []string  `json:"zoneIDs"`
	Pools   []string  `json:"pools"`
	Hosts   []string  `json:"hosts"`
	Mintime time.Time `json:"mintime"`
	Maxtime time.Time `json:"maxtime"`
	Limit   uint64    `json:"limit"`
}

// GetZoneIDs returns __FetchZoneTotalsInput.ZoneIDs, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetZoneIDs() []string { return v.ZoneIDs }

// GetPools returns __FetchZoneTotalsInput.Pools, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetPools() []string { return v.Pools }

// GetHosts returns __FetchZoneTotalsInput.Hosts, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetHosts() []string { return v.Hosts }

// GetMintime returns __FetchZoneTotalsInput.Mintime, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetMintime() time.Time { return v.Mintime }

// GetMaxtime returns __FetchZoneTotalsInput.Maxtime, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetMaxtime() time.Time { return v.Maxtime }

// GetLimit returns __FetchZoneTotalsInput.Limit, and is useful for accessing the field via an interface.
func (v *__FetchZoneTotalsInput) GetLimit() uint64 { return v.Limit }

// The query or mutation executed by FetchZoneTotals.
const FetchZoneTotals_Operation = `
query FetchZoneTotals ($zoneIDs: [string!], $pools: [string!], $hosts: [string!], $mintime: Time!, $maxtime: Time!, $limit: uint64!) {
	viewer {
		zones(filter: {zoneTag_in:$zoneIDs}) {
			zoneTag
			httpRequestsAdaptiveGroups(filter: {clientRequestHTTPHost_in:$hosts,datetime_geq:$mintime,datetime_lt:$maxtime}, limit: $limit) {
				count
				dimensions {
					cacheStatus
					edgeResponseStatus
					clientCountryName
					clientRequestHTTPHost
				}
			}
			loadBalancingRequestsAdaptiveGroups(filter: {selectedPoolName_in:$pools,datetime_geq:$mintime,datetime_lt:$maxtime}, limit: $limit) {
				count
				dimensions {
					region
					lbName
					selectedPoolName
					proxied
					selectedOriginName
					selectedPoolAvgRttMs
					selectedPoolHealthy
					steeringPolicy
				}
			}
		}
	}
}
`

func FetchZoneTotals(
	ctx_ context.Context,
	client_ graphql.Client,
	zoneIDs []string,
	pools []string,
	hosts []string,
	mintime time.Time,
	maxtime time.Time,
	limit uint64,
) (*FetchZoneTotalsResponse, error) {
	req_ := &graphql.Request{
		OpName: "FetchZoneTotals",
		Query:  FetchZoneTotals_Operation,
		Variables: &__FetchZoneTotalsInput{
			ZoneIDs: zoneIDs,
			Pools:   pools,
			Hosts:   hosts,
			Mintime: mintime,
			Maxtime: maxtime,
			Limit:   limit,
		},
	}
	var err_ error

	var data_ FetchZoneTotalsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
